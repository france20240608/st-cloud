<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.st.cloud</groupId>
    <artifactId>st-dependencies</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>${project.artifactId}</name>
    <description>基础 bom 文件，管理整个项目的依赖版本</description>
    <url>https://king.st.com</url>


    <properties>
        <revision>1.0.0-snapshot</revision>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <!-- 统一依赖管理 -->
        <spring.boot.version>3.2.8</spring.boot.version>
        <spring.cloud.version>2023.0.3</spring.cloud.version>
        <spring.cloud.alibaba.version>2023.0.1.2</spring.cloud.alibaba.version>
        <spring.cloud.gateway.version>4.1.5</spring.cloud.gateway.version>
        <spring.boot.security.version>3.2.8</spring.boot.security.version>

        <spring.security.config.version>6.3.1</spring.security.config.version>
        <!-- DB 相关 -->
        <mysql.version>8.4.0</mysql.version>
        <mybatis-plus.version>3.5.7</mybatis-plus.version>
        <mybatis-spring.version>3.0.3</mybatis-spring.version>
        <mybatis-plus-generator.version>3.5.7</mybatis-plus-generator.version>
        <dynamic-datasource.version>4.3.0</dynamic-datasource.version>
        <mybatis-plus-join.version>1.4.13</mybatis-plus-join.version>
        <!-- 消息队列 -->
        <rocketmq-spring.version>2.3.0</rocketmq-spring.version>
        <rocketmq.version>5.2.0</rocketmq.version>
        <!-- 缓存 相关 -->
        <redisson.version>3.31.0</redisson.version>
        <jetcache.version>2.7.6</jetcache.version>
        <caffeine.version>3.1.8</caffeine.version>
        <!-- 工具类相关 -->
        <lombok.version>1.18.32</lombok.version>
        <hutool.version>5.8.28</hutool.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <fastjson2.version>2.0.51</fastjson2.version>
        <transmittable-thread-local.version>2.14.5</transmittable-thread-local.version>
        <!-- Test 单元测试相关 -->
        <mockito-inline.version>5.2.0</mockito-inline.version>
        <!-- 监控相关 -->
        <skywalking.version>9.2.0</skywalking.version>
        <opentracing.version>0.33.0</opentracing.version>
        <spring-boot-admin.version>3.3.2</spring-boot-admin.version>
        <!-- -->
        <springdoc.version>1.8.0</springdoc.version>
        <knife4j.version>4.5.0</knife4j.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 统一依赖管理 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions> <!-- CWE-770 安全漏洞排除 Allocation of Resources Without Limits or Throttling -->
                    <exclusion>
                        <groupId>commons-fileupload</groupId>
                        <artifactId>commons-fileupload</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions> <!-- CWE-502 - 安全漏洞排除 Deserialization of Untrusted Data -->
                    <exclusion>
                        <groupId>com.alibaba</groupId>
                        <artifactId>fastjson</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Spring 核心 -->
            <dependency>
                <!-- 用于生成自定义的 Spring @ConfigurationProperties 配置类的说明文件 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- Spring Cloud Gateway -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${spring.cloud.gateway.version}</version>
            </dependency>
            <!-- Spring Security -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring.boot.security.version}</version>
            </dependency>
            <!-- Reactive Security for WebFlux -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.security</groupId>-->
<!--                <artifactId>spring-security-config</artifactId>-->
<!--                <version>${spring.security.config.version}</version>-->
<!--            </dependency>-->

            <!-- 内部基础设施模块依赖 -->
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-spring-boot-starter-env</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-spring-boot-starter-rpc</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-spring-boot-starter-redis</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-spring-boot-starter-mq</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-spring-boot-starter-db</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-spring-boot-starter-biz-tenant</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 内部业务模块feign api依赖 -->
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-module-user-api</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-module-system-api</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- DB相关 -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mybatis</groupId>
                        <artifactId>mybatis-spring</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>com.baomidou</groupId>-->
<!--                <artifactId>mybatis-plus-generator</artifactId> &lt;!&ndash; 代码生成器，使用它解析表结构 &ndash;&gt;-->
<!--                <version>${mybatis-plus-generator.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>com.github.yulichang</groupId>-->
<!--                <artifactId>mybatis-plus-join-boot-starter</artifactId> &lt;!&ndash; MyBatis 联表查询 &ndash;&gt;-->
<!--                <version>${mybatis-plus-join.version}</version>-->
<!--            </dependency>-->

            <!-- 缓存相关 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redis-lettuce</artifactId>
                <version>${jetcache.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <!-- 消息队列相关 -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>${rocketmq.version}</version>
            </dependency>


            <!-- 工具类相关 -->
            <dependency>
                <groupId>com.st.cloud</groupId>
                <artifactId>st-common</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId> <!-- 解决 ThreadLocal 父子线程的传值问题 -->
                <version>${transmittable-thread-local.version}</version>
            </dependency>

            <!-- Test 单元测试相关 -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito-inline.version}</version> <!-- 支持 Mockito 的 final 类与 static 方法的 mock -->
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>asm</artifactId>
                        <groupId>org.ow2.asm</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mockito</groupId>
                        <artifactId>mockito-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- 监控相关 -->
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-trace</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-logback-1.x</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-opentracing</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-noop</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId> <!-- 实现 Spring Boot Admin Server 服务端 -->
                <version>${spring-boot-admin.version}</version>
            </dependency>

            <!-- api文档相关-->
            <dependency>
                <groupId>org.springdoc</groupId> <!-- 接口文档 UI：默认 -->
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId> <!-- 接口文档 UI：knife4j -->
                <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId> <!-- 接口文档 UI：knife4j【网关专属】 -->
                <artifactId>knife4j-gateway-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Web 相关 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 统一 revision 版本 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                    </execution>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
